

let words = [] 
words[0] = ["a","b","ba","bca","bda","bdca", 'c' , 'e']
words[1] = ["xbc","pcxbcf","xb","cxbc","pcxbc", 'bc' , 'xb', 'cpbp'] 

// return an array of length
function length(arr){
    let length = []
    for(let i = 0; i < arr.length ; i++){
      length[i] = arr[i].length
    }
    return length
}

// delete Doublon in array
function deleteDoublon(arr){
    let shortArray = []
    for(let i = 0; i < arr.length ; i++){
      if(shortArray.indexOf(arr[i]) == -1) shortArray.push(arr[i])
    }
    return shortArray
}

//Ordinary
function ordinary(arr){
    let max = 0
    for(let j = 0; j < arr.length ; j++){
        for (let i = 0 ; i < arr.length - j; i++) {
            if(i != arr.length -1 ){
                if(arr[i] < arr[i+1]) {
                    max = arr[i+1]
                } else {
                    max = arr[i];
                    arr[i] = arr[i+1];
                    arr[i+1] = max
                }    
            }
                
        }
    }
    return arr   
}


//return string who have same length
function listOfIndexOfString(arr, length){
  let values = []
  for(let i = 0; i < arr.length ; i++){
    if( arr[i].length == length) values.push(arr[i])
  }
  return values
}

//verify if all values of arr is in inArr
function indexOfString(arr , inArr){
  let isInArray = false
  let compteur = 0
  for(let i = 0; i < arr.length ; i++){
    if( inArr.indexOf(arr[i]) != -1) ++compteur
  }
  if(compteur == arr.length ) isInArray = true
  return isInArray
}


function Clone(clone , arr){
  for(let i = 0; i < arr.length ; i++ ){
    clone[i] = arr[i]
  }
  return clone
}

function compareValue(value , arr, p, chain, position, longChain ){
    if(k === true){
        k = false
        final = position.length - p
        for(let i = 0; i <= final ; i++ ){
            position.pop()
        }
    }else{

    }
    for(let i = 0; i < arr.length; i++ ){
        if(indexOfString(value , arr[i])){
            position.indexOf(value) == -1 ? position.push(value) : position = position
            position.indexOf(arr[i]) == -1 ? position.push(arr[i]) : position = position
            if(arr != chain[chain.length -1]){
              compareValue(arr[i] , chain[p+1], p+1, chain, position, longChain)
            }else{
                k = true
                clone = []
                Clone(clone, position)
                longChain.push(clone)
            }
        }
    }
}
function compareArray(first, second, p , chain, position, longChain){
    for(let i = 0; i < first.length; i++ ){
        compareValue(first[i] , second, p, chain, position, longChain)
    }
}

let Length = length(words[0])
let del = ordinary(deleteDoublon(Length))
let chain = [], longChain = []
var position = []
for(let i = 0; i < del.length ; i++){
  chain[i] = listOfIndexOfString(words[0], del[i])
}
let k 
compareArray(chain[0], chain[1], 1, chain, position, longChain)

console.log(longChain)

let finalValue = ordinary(deleteDoublon(length(longChain)))
console.log(finalValue[finalValue.length-1])
